package views

import (
	"trisend/internal/types"
	"trisend/internal/views/components"
	"trisend/internal/views/layouts"
)

templ SSHKeyForm(ProfileButton templ.Component, validation types.ValidationSSHForm) {
	@layouts.Layout() {
		@components.Notification(1) {
			<div>
				<strong class="block">Error Notification</strong>
				<span>An error has occurred, try it later.</span>
			</div>
		}
		<header class="flex items-center justify-between pl-6 pr-14 pt-6 relative before:contet-[''] before:block before:absolute before:-bottom-[25px] before:left-0 before:right-0 before:h-[4px] before:bg-black before:shadow-[0_1px_0_0_#ffffff29] before:-z-10">
			<span id="header_logo" class="font-bold text-white text-4xl">
				<a href="/">Trisend</a>
			</span>
			@ProfileButton
		</header>
		<div id="section" class="pt-11 px-9">
			@CreateSSHForm(validation)
		</div>
		<script>
			document.body.addEventListener('htmx:responseError', function(e){
				const $notifier = document.querySelector('#notify_comp')
				$notifier?.removeAttribute('data-hide')
				setTimeout(() => $notifier?.setAttribute('data-hide', '') , 3000)
			})
		</script>
	}
}

templ CreateSSHForm(validation types.ValidationSSHForm) {
	<form
		id="create_ssh"
		hx-post="/keys"
		hx-swap-oob="true"
		class="flex flex-col items-center"
	>
		<header class="flex items-end justify-between mb-9 pb-3 border-b-[#3d444d] border-b-[1px] border-b-solid">
			<h2 class="text-[30px] text-[#ffffffba]">Add new SSH Key</h2>
		</header>
		<div class="container text-[#ffffffba] max-w-[900px]">
			<div class="input_group mb-4">
				<label class="text-[20px]" for="title">Title</label>
				<input
					id="title"
					type="text"
					value={ validation.Fields["title"] }
					name="title"
					class="relative outline-none shadow-[inset_0_1px_0_0_rgba(255,255,255,0.2)] isolate w-full h-12 px-4 border-black border-solid border-[3px] rounded-[1ex] bg-transparent text-[rgba(255,255,255,0.7)]"
				/>
				if validation.Errors["title"] != "" {
					<span class="error-msg text-red-500 text-sm">{ validation.Errors["title"] }</span>
				}
			</div>
			<div class="input_group mb-4">
				<label class="text-[20px]" for="key">Key</label>
				<textarea
					name="key"
					id="key"
					class="p-4 relative min-h-[280px] outline-none shadow-[inset_0_1px_0_0_rgba(255,255,255,0.2)] isolate w-full h-12 border-black border-solid border-[3px] rounded-[1ex] bg-transparent text-[rgba(255,255,255,0.7)]"
				>
					{ validation.Fields["key"] }
				</textarea>
				if validation.Errors["key"] != "" {
					<span class="error-msg text-red-500 text-sm">{ validation.Errors["key"] }</span>
				}
			</div>
			<button class="rounded-[5px] grid items-center text-white px-[12px] min-h-[30px] font-semibold bg-[#238636]">Add SSH key</button>
		</div>
	</form>
}
