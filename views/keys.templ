package views

import (
	"trisend/types"
	"trisend/views/layouts"
)

templ Keys(ProfileButton templ.Component, keys []types.SSHKey) {
	@layouts.Layout() {
		<header class="flex items-center justify-between pl-6 pr-14 pt-6 relative before:contet-[''] before:block before:absolute before:-bottom-[25px] before:left-0 before:right-0 before:h-[4px] before:bg-black before:shadow-[0_1px_0_0_#ffffff29] before:-z-10">
			<span id="header_logo" class="font-bold text-white text-4xl">
				<a href="/">Trisend</a>
			</span>
			@ProfileButton
		</header>
		<div id="section" class="pt-11 px-9">
			<header class="flex items-end justify-between mb-9 pb-3">
				<h2 class="text-[30px] text-[#ffffffba]">SSH keys</h2>
				<a href="/keys/create" class="rounded-[5px] grid items-center text-white px-[12px] min-h-[30px] font-semibold bg-[#238636]">New SSH key</a>
			</header>
			<div class="keys w-full flex justify-center">
				for _, key := range keys {
					<div data-keyid={ key.ID } class="key_card grid gap-4 grid-cols-[1fr_2fr_1fr] items-center max-w-min p-6 rounded-[2ex] text-[#ffffffba] border-black border-solid border-[2px]">
						<div class="icon grid justify-items-center">
							<svg xmlns="http://www.w3.org/2000/svg" width="54" height="54" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-key"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M16.555 3.843l3.602 3.602a2.877 2.877 0 0 1 0 4.069l-2.643 2.643a2.877 2.877 0 0 1 -4.069 0l-.301 -.301l-6.558 6.558a2 2 0 0 1 -1.239 .578l-.175 .008h-1.172a1 1 0 0 1 -.993 -.883l-.007 -.117v-1.172a2 2 0 0 1 .467 -1.284l.119 -.13l.414 -.414h2v-2h2v-2l2.144 -2.144l-.301 -.301a2.877 2.877 0 0 1 0 -4.069l2.643 -2.643a2.877 2.877 0 0 1 4.069 0z"></path><path d="M15 9h.01"></path></svg>
							<span class="block px-[5px] border-[1px] border-solid rounded-[5px] text-[14px] border-[#3d444d] text-[#3d444d]">SSH</span>
						</div>
						<div class="info">
							<p><strong class="text-[25px]">{ key.Title }</strong></p>
							<code class="text-[15px]">SHA256:{ key.Fingerprint }</code>
						</div>
						<button popovertarget="modal" class="hover:bg-[#fa5e55] hover:text-[#ffffffba] max-w-min text-[16px] ml-4 px-[5px] rounded-[5px] text-[#fa5e55] bg-[#212830] border-[1px] border-[#5c5959] border-solid">Delete</button>
					</div>
				}
			</div>
		</div>
		<div popover id="modal" class="relative isolate pb-4 text-[#ffffffba] overflow-hidden max-w-[60ch] rounded-[1ex] bg-[#1C1D21] border-solid border-[#ffffff47] border-[1px]">
			<header class="p-4 flex items-center justify-between relative before:content-[''] before:block before:absolute before:h-[1px] before:bottom-0 before:w-[103%] before:bg-[#ffffff47] before:-left-[4px]">
				<span>Are you sure you want to delete this SSH key?</span>
				<button popovertarget="modal" popovertargetaction="hide" class="grid place-items-center w-8 h-8 rounded hover:bg-[#ffffff12]">
					<svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" stroke="#ffffffba">
						<path d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"></path>
					</svg>
				</button>
			</header>
			<form>
				<p class="px-4 pt-4 pb-5">
					This action <strong>CANNOT</strong> be undone. This will permanently delete the SSH key and if youâ€™d like to use it in the future, you will need to upload it again.
				</p>
				<div class="px-4">
					<button hx-trigger="click" id="submit" class="p-1 w-full rounded hover:bg-[#fa5e55] hover:text-[#ffffffba] text-[#fa5e55] bg-[#212830] border-[#ffffff47] border-solid border-[1px]">
						I understand, delete this SSH key
					</button>
				</div>
			</form>
		</div>
		<script>
			document.addEventListener('DOMContentLoaded', () => {
				const $modal = document.querySelector('#modal #submit')

				document.querySelectorAll('.keys .key_card button').forEach(button => {
					button.addEventListener('click', function(e) {
						const keyCard = button.closest('.key_card');
						const keyId = keyCard.dataset.keyid;
						$modal.setAttribute("hx-delete", `/keys/${keyId}`)
					})
				})
			})
		</script>
	}
}
